{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "CleanupAssetMaintenanceIfMoreThanOneBlob": {
        "actions": {
          "AssetMaintenanceDataCleanupLoop": {
            "actions": {
              "Delete_blob_(V2)_2": {
                "inputs": {
                  "headers": {
                    "SkipDeleteIfFileNotFoundOnServer": false
                  },
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['azureblob']['connectionId']"
                    }
                  },
                  "method": "delete",
                  "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files/@{encodeURIComponent(encodeURIComponent(items('AssetMaintenanceDataCleanupLoop')?['Path']))}"
                },
                "runAfter": {},
                "type": "ApiConnection"
              }
            },
            "foreach": "@body('FilterAssetMaintanenceDataOlderThan7Days')",
            "runAfter": {
              "FilterAssetMaintanenceDataOlderThan7Days": [
                "Succeeded"
              ]
            },
            "type": "Foreach"
          },
          "FilterAssetMaintanenceDataOlderThan7Days": {
            "inputs": {
              "from": "@body('ListAllAssetMaintenanceBlobs')?['value']",
              "where": "@less(item()?['LastModified'], subtractFromTime(utcNow(), 7, 'Day'))"
            },
            "runAfter": {},
            "type": "Query"
          }
        },
        "expression": {
          "and": [
            {
              "greater": [
                "@length(body('ListAllAssetMaintenanceBlobs')?['value'])",
                1
              ]
            }
          ]
        },
        "runAfter": {
          "ListAllAssetMaintenanceBlobs": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "CleanupSensorItemBatchAttributeMappingsIfMoreThanOneBlob": {
        "actions": {
          "FilterSensorItemBatchAttributeMappingsOlderThan7Days": {
            "inputs": {
              "from": "@body('ListAllSensorJobItembatchAttributeMappings')?['value']",
              "where": "@less(item()?['LastModified'], subtractFromTime(utcNow(), 7, 'Day'))"
            },
            "runAfter": {},
            "type": "Query"
          },
          "SensorJobItemBatchAttributeMappingCleanupLoop": {
            "actions": {
              "Delete_blob_(V2)": {
                "inputs": {
                  "headers": {
                    "SkipDeleteIfFileNotFoundOnServer": false
                  },
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['azureblob']['connectionId']"
                    }
                  },
                  "method": "delete",
                  "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files/@{encodeURIComponent(encodeURIComponent(items('SensorJobItemBatchAttributeMappingCleanupLoop')?['Path']))}"
                },
                "runAfter": {},
                "type": "ApiConnection"
              }
            },
            "foreach": "@body('FilterSensorItemBatchAttributeMappingsOlderThan7Days')",
            "runAfter": {
              "FilterSensorItemBatchAttributeMappingsOlderThan7Days": [
                "Succeeded"
              ]
            },
            "type": "Foreach"
          }
        },
        "expression": {
          "and": [
            {
              "greater": [
                "@length(body('ListAllSensorJobItembatchAttributeMappings')?['value'])",
                1
              ]
            }
          ]
        },
        "runAfter": {
          "ListAllSensorJobItembatchAttributeMappings": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "CleanupSensorJobsIfMoreThanOneBlob": {
        "actions": {
          "FilterSensorJobsBlobsOlderThan7Days": {
            "inputs": {
              "from": "@body('ListAllSensorJobsBlobs')?['value']",
              "where": "@less(item()?['LastModified'], subtractFromTime(utcNow(), 7, 'Day'))"
            },
            "runAfter": {},
            "type": "Query"
          },
          "SensorJobCleanupLoop": {
            "actions": {
              "DeleteOldSensorJobsBlob": {
                "inputs": {
                  "headers": {
                    "SkipDeleteIfFileNotFoundOnServer": false
                  },
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['azureblob']['connectionId']"
                    }
                  },
                  "method": "delete",
                  "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files/@{encodeURIComponent(encodeURIComponent(items('SensorJobCleanupLoop')?['Path']))}"
                },
                "runAfter": {},
                "type": "ApiConnection"
              }
            },
            "foreach": "@body('FilterSensorJobsBlobsOlderThan7Days')",
            "runAfter": {
              "FilterSensorJobsBlobsOlderThan7Days": [
                "Succeeded"
              ]
            },
            "type": "Foreach"
          }
        },
        "expression": {
          "and": [
            {
              "greater": [
                "@length(body('ListAllSensorJobsBlobs')?['value'])",
                1
              ]
            }
          ]
        },
        "runAfter": {
          "ListAllSensorJobsBlobs": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "CreateAssetMaintenanceMappingsBlob": {
        "inputs": {
          "body": "@body('FilterAssetMaintenanceScenario')",
          "headers": {
            "ReadFileMetadataFromServer": true
          },
          "host": {
            "connection": {
              "name": "@parameters('$connections')['azureblob']['connectionId']"
            }
          },
          "method": "post",
          "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files",
          "queries": {
            "folderPath": "sensorintelligencereferencedata/assetmaintenancedata",
            "name": "@{concat('assetmaintenance', utcNow('yyyy-MM-ddTHH-mm'), '.json')}",
            "queryParametersSingleEncoded": true
          }
        },
        "runAfter": {
          "FilterAssetMaintenanceScenario": [
            "Succeeded"
          ]
        },
        "runtimeConfiguration": {
          "contentTransfer": {
            "transferMode": "Chunked"
          }
        },
        "type": "ApiConnection"
      },
      "FilterAssetMaintenanceScenario": {
        "inputs": {
          "from": "@body('ParseScenarioSensorMappings')?['value']",
          "where": "@and(equals(item()['IsSensorActiveForScenario'], 'Yes'), equals(item()['Scenario'], 'AssetMaintenance'))"
        },
        "runAfter": {
          "ParseScenarioSensorMappings": [
            "Succeeded"
          ]
        },
        "type": "Query"
      },
      "FilterEquipmentDowntimeScenario": {
        "inputs": {
          "from": "@body('ParseScenarioSensorMappings')?['value']",
          "where": "@and(equals(item()['IsSensorActiveForScenario'], 'Yes'), equals(item()['Scenario'], 'MachineReportingStatus'))"
        },
        "runAfter": {
          "ParseScenarioSensorMappings": [
            "Succeeded"
          ]
        },
        "type": "Query"
      },
      "FilterProductQualityScenario": {
        "inputs": {
          "from": "@body('ParseScenarioSensorMappings')?['value']",
          "where": "@and(equals(item()['IsSensorActiveForScenario'], 'Yes'), equals(item()['Scenario'], 'ProductQualityValidation'))"
        },
        "runAfter": {
          "ParseScenarioSensorMappings": [
            "Succeeded"
          ]
        },
        "type": "Query"
      },
      "GetScenarioSensorMappings": {
        "inputs": {
          "authentication": "@parameters('DynamicsIdentityAuthentication')",
          "method": "GET",
          "uri": "@{parameters('EnvironmentUrl')}/data/SensorScenarioMappings"
        },
        "runAfter": {},
        "type": "Http"
      },
      "IfActiveEquipmentDowntimeScenarioExists": {
        "actions": {
          "CreateSensorJobsBlob": {
            "inputs": {
              "body": "@body('ParseSensorJobsRefData')?['value']",
              "headers": {
                "ReadFileMetadataFromServer": true
              },
              "host": {
                "connection": {
                  "name": "@parameters('$connections')['azureblob']['connectionId']"
                }
              },
              "method": "post",
              "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files",
              "queries": {
                "folderPath": "sensorintelligencereferencedata/sensorjobs",
                "name": "@{concat('sensorjobs', utcNow('yyyy-MM-ddTHH-mm'), '.json')}",
                "queryParametersSingleEncoded": true
              }
            },
            "runAfter": {
              "ParseSensorJobsRefData": [
                "Succeeded"
              ]
            },
            "runtimeConfiguration": {
              "contentTransfer": {
                "transferMode": "Chunked"
              }
            },
            "type": "ApiConnection"
          },
          "GetSensorJobs": {
            "inputs": {
              "authentication": "@parameters('DynamicsIdentityAuthentication')",
              "method": "GET",
              "uri": "@{parameters('EnvironmentUrl')}/data/SensorJobs"
            },
            "runAfter": {},
            "type": "Http"
          },
          "ParseSensorJobsRefData": {
            "inputs": {
              "content": "@body('GetSensorJobs')",
              "schema": {
                "properties": {
                  "value": {
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "runAfter": {
              "GetSensorJobs": [
                "Succeeded"
              ]
            },
            "type": "ParseJson"
          }
        },
        "else": {
          "actions": {
            "CreateEmptySensorJobsBlob": {
              "inputs": {
                "body": "[]",
                "headers": {
                  "ReadFileMetadataFromServer": true
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files",
                "queries": {
                  "folderPath": "sensorintelligencereferencedata/sensorjobs",
                  "name": "@{concat('sensorjobs', utcNow('yyyy-MM-ddTHH-mm'), '.json')}",
                  "queryParametersSingleEncoded": true
                }
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              },
              "type": "ApiConnection"
            }
          }
        },
        "expression": {
          "and": [
            {
              "equals": [
                "@empty(body('FilterEquipmentDowntimeScenario'))",
                "@false"
              ]
            }
          ]
        },
        "runAfter": {
          "FilterEquipmentDowntimeScenario": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "IfActiveProductQualityScenarioExists": {
        "actions": {
          "CreateSensorItemBatchAttributeMappingsBlob": {
            "inputs": {
              "body": "@body('ParseSensorItemBatchAttributeMappingsRefData')?['value']",
              "headers": {
                "ReadFileMetadataFromServer": true
              },
              "host": {
                "connection": {
                  "name": "@parameters('$connections')['azureblob']['connectionId']"
                }
              },
              "method": "post",
              "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files",
              "queries": {
                "folderPath": "sensorintelligencereferencedata/sensorjobbatchattributes",
                "name": "@{concat('sensorjobitembatchattributemappings', utcNow('yyyy-MM-ddTHH-mm'), '.json')}",
                "queryParametersSingleEncoded": true
              }
            },
            "runAfter": {
              "ParseSensorItemBatchAttributeMappingsRefData": [
                "Succeeded"
              ]
            },
            "runtimeConfiguration": {
              "contentTransfer": {
                "transferMode": "Chunked"
              }
            },
            "type": "ApiConnection"
          },
          "GetSensorItemBatchAttributeMappings": {
            "inputs": {
              "authentication": "@parameters('DynamicsIdentityAuthentication')",
              "method": "GET",
              "uri": "@{parameters('EnvironmentUrl')}/data/SensorJobItemBatchAttributes"
            },
            "runAfter": {},
            "type": "Http"
          },
          "ParseSensorItemBatchAttributeMappingsRefData": {
            "inputs": {
              "content": "@body('GetSensorItemBatchAttributeMappings')",
              "schema": {
                "properties": {
                  "value": {
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "runAfter": {
              "GetSensorItemBatchAttributeMappings": [
                "Succeeded"
              ]
            },
            "type": "ParseJson"
          }
        },
        "else": {
          "actions": {
            "CreateEmptySensorItemBatchAttributeMappingsBlob": {
              "inputs": {
                "body": "[]",
                "headers": {
                  "ReadFileMetadataFromServer": true
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/files",
                "queries": {
                  "folderPath": "sensorintelligencereferencedata/sensorjobbatchattributes",
                  "name": "@{concat('sensorjobitembatchattributemappings', utcNow('yyyy-MM-ddTHH-mm'), '.json')}",
                  "queryParametersSingleEncoded": true
                }
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              },
              "type": "ApiConnection"
            }
          }
        },
        "expression": {
          "and": [
            {
              "equals": [
                "@empty(body('ParseScenarioSensorMappings'))",
                "@false"
              ]
            }
          ]
        },
        "runAfter": {
          "FilterProductQualityScenario": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "ListAllAssetMaintenanceBlobs": {
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['azureblob']['connectionId']"
            }
          },
          "method": "get",
          "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/foldersV2/@{encodeURIComponent(encodeURIComponent('/sensorintelligencereferencedata/assetmaintenancedata'))}",
          "queries": {
            "nextPageMarker": "",
            "useFlatListing": false
          }
        },
        "runAfter": {},
        "type": "ApiConnection"
      },
      "ListAllSensorJobItembatchAttributeMappings": {
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['azureblob']['connectionId']"
            }
          },
          "method": "get",
          "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/foldersV2/@{encodeURIComponent(encodeURIComponent('/sensorintelligencereferencedata/sensorjobbatchattributes'))}",
          "queries": {
            "nextPageMarker": "",
            "useFlatListing": false
          }
        },
        "runAfter": {},
        "type": "ApiConnection"
      },
      "ListAllSensorJobsBlobs": {
        "inputs": {
          "host": {
            "connection": {
              "name": "@parameters('$connections')['azureblob']['connectionId']"
            }
          },
          "method": "get",
          "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/foldersV2/@{encodeURIComponent(encodeURIComponent('/sensorintelligencereferencedata/sensorjobs'))}",
          "queries": {
            "nextPageMarker": "",
            "useFlatListing": false
          }
        },
        "runAfter": {},
        "type": "ApiConnection"
      },
      "ParseScenarioSensorMappings": {
        "inputs": {
          "content": "@body('GetScenarioSensorMappings')",
          "schema": {
            "properties": {
              "value": {
                "type": "array"
              }
            },
            "type": "object"
          }
        },
        "runAfter": {
          "GetScenarioSensorMappings": [
            "Succeeded"
          ]
        },
        "type": "ParseJson"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {
      "$connections": {
        "defaultValue": {},
        "type": "Object"
      },
      "DynamicsIdentityAuthentication": {
        "defaultValue": {},
        "type": "Object"
      },
      "EnvironmentUrl": {
        "defaultValue": "",
        "type": "String"
      },
      "StorageAccountName": {
        "defaultValue": "",
        "type": "String"
      }
    },
    "triggers": {
      "Recurrence": {
        "evaluatedRecurrence": {
          "frequency": "Minute",
          "interval": 2
        },
        "recurrence": {
          "frequency": "Minute",
          "interval": 2
        },
        "type": "Recurrence"
      }
    }
  },
  "parameters": {}
}
